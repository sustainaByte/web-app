[{"/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/index.tsx":"1","/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/App.tsx":"2","/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/Components/PageLayout/theme.tsx":"3","/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/Components/PageLayout/pageLayout.tsx":"4","/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/Components/Home/home.tsx":"5","/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/Components/Login/login.tsx":"6","/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/Components/Header/header.tsx":"7","/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/Components/Posts/HomepagePost/homepagePost.tsx":"8","/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/Components/Posts/posts.tsx":"9"},{"size":385,"mtime":1700313455569,"results":"10","hashOfConfig":"11"},{"size":1731,"mtime":1700325315308,"results":"12","hashOfConfig":"11"},{"size":614,"mtime":1700313455569,"results":"13","hashOfConfig":"11"},{"size":312,"mtime":1700313455569,"results":"14","hashOfConfig":"11"},{"size":114,"mtime":1700313455569,"results":"15","hashOfConfig":"11"},{"size":4681,"mtime":1700316058243,"results":"16","hashOfConfig":"11"},{"size":959,"mtime":1700313455569,"results":"17","hashOfConfig":"11"},{"size":4259,"mtime":1700327333998,"results":"18","hashOfConfig":"11"},{"size":309,"mtime":1700320082863,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"pi8wnl",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"23"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/index.tsx",[],[],["51"],"/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/App.tsx",["52","53","54"],[],"import React, {createContext, useContext} from 'react';\nimport {Route, Routes} from \"react-router-dom\";\nimport PageLayout from \"./Components/PageLayout/pageLayout\";\nimport Homepage from \"./Components/Home/home\";\nimport LoginPage from \"./Components/Login/login\";\nimport HomepagePost from './Components/Posts/HomepagePost/homepagePost';\nimport {createTheme, ThemeProvider} from \"@mui/material/styles\";\nimport {PaletteMode, useMediaQuery} from \"@mui/material\";\nimport getDesignTokens from \"./Components/PageLayout/theme\";\n\nexport const ColorModeContext = React.createContext({\n    toggleColorMode: () => {\n    }\n});\n\nfunction App() {\n    const [mode, setMode] = React.useState<PaletteMode>('dark');\n    const colorMode = React.useMemo(\n        () => ({\n            // The dark mode switch would invoke this method\n            toggleColorMode: () => {\n                setMode((prevMode: PaletteMode) =>\n                    prevMode === 'light' ? 'dark' : 'light',\n                );\n            },\n        }),\n        [],\n    );\n\n    // Update the theme only if the mode changes\n    const theme = React.useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n\n    return (\n        <ColorModeContext.Provider value={colorMode}>\n            <ThemeProvider theme={theme}>\n                <Routes>\n                    <Route element={<PageLayout/>}>\n                        <Route path=\"/\" element={<Homepage/>}/>\n                    </Route>\n                    <Route path=\"login\" element={<LoginPage/>}/>\n                    <Route path=\"homepagePost\" element={<HomepagePost/>}/>    {/* ! delete this route */}\n                </Routes>\n            </ThemeProvider>\n        </ColorModeContext.Provider>\n    );\n}\n\nexport default App;\n","/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/Components/PageLayout/theme.tsx",[],[],"/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/Components/PageLayout/pageLayout.tsx",[],[],"/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/Components/Home/home.tsx",[],[],"/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/Components/Login/login.tsx",["55","56","57","58"],[],"import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst Login = () => {\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n        console.log({\n            email: data.get('email'),\n            password: data.get('password'),\n        });\n    };\n\n    return (\n        <Container component=\"div\" maxWidth=\"xs\">\n            <CssBaseline />\n            <Box\n                sx={{\n                    marginTop: 8,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}\n            >\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Box>\n        </Container>\n    );\n}\n\nconst LoginHeroHeader = () => {\n    return (\n        <Container\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%',\n            }}\n        >\n            <Box\n                sx={{\n                    marginTop: 8,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    color: 'text.primary',\n                }}\n            >\n                <h2>Hello There!</h2>\n                <p>\n                    While we strive to follow the Material Design guidelines where practical (applying common sense where guidelines contradict - a more common occurrence than one might expect), we do not expect to support every component, nor every feature of every component, but rather to provide the building blocks to allow developers to create compelling user interfaces and experiences.\n                </p>\n            </Box>\n        </Container>\n    )\n}\n\nconst LoginPage = () => {\n    return (\n        <Container\n            component=\"div\"\n            sx={{\n                display: 'flex',\n                flexDirection: 'row',\n                width: '100%',\n                height: '100vh',\n                backgroundColor: '${props => props.theme.colors.background}'\n            }}\n        >\n            <Login />\n            <LoginHeroHeader />\n        </Container>\n    )\n}\n\n\n\nexport default LoginPage","/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/Components/Header/header.tsx",["59","60","61","62","63"],[],"import './header.scss'\nimport Button from \"@mui/material/Button\";\n\nconst Header = () => {\n    return (\n        <header>\n            <div className='header-container'>\n                <h2></h2>\n                <ul className='header-list'>\n                    <Button>\n                        <a href=\"#\">\n                            Item\n                        </a>\n                    </Button>\n                    <Button>\n                        <a href=\"#\">\n                            Item\n                        </a>\n                    </Button>\n                    <Button>\n                        <a href=\"#\">\n                            Item\n                        </a>\n                    </Button>\n                    <Button>\n                        <a href=\"#\">\n                            Item\n                        </a>\n                    </Button>\n                </ul>\n            </div>\n        </header>\n    )\n}\n\nexport default Header","/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/Components/Posts/HomepagePost/homepagePost.tsx",["64","65","66","67","68"],[],"/home/cat/Desktop/sus/web-app/sustainabyte-fe/src/Components/Posts/posts.tsx",[],[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":16,"nodeType":"73","messageId":"74","endLine":1,"endColumn":29},{"ruleId":"71","severity":1,"message":"75","line":1,"column":31,"nodeType":"73","messageId":"74","endLine":1,"endColumn":41},{"ruleId":"71","severity":1,"message":"76","line":8,"column":22,"nodeType":"73","messageId":"74","endLine":8,"endColumn":35},{"ruleId":"71","severity":1,"message":"77","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"78","line":13,"column":10,"nodeType":"73","messageId":"74","endLine":13,"endColumn":21},{"ruleId":"71","severity":1,"message":"79","line":13,"column":23,"nodeType":"73","messageId":"74","endLine":13,"endColumn":36},{"ruleId":"80","severity":1,"message":"81","line":126,"column":34,"nodeType":"82","messageId":"83","endLine":126,"endColumn":77},{"ruleId":"84","severity":1,"message":"85","line":8,"column":17,"nodeType":"86","endLine":8,"endColumn":21},{"ruleId":"87","severity":1,"message":"88","line":11,"column":25,"nodeType":"86","endLine":11,"endColumn":37},{"ruleId":"87","severity":1,"message":"88","line":16,"column":25,"nodeType":"86","endLine":16,"endColumn":37},{"ruleId":"87","severity":1,"message":"88","line":21,"column":25,"nodeType":"86","endLine":21,"endColumn":37},{"ruleId":"87","severity":1,"message":"88","line":26,"column":25,"nodeType":"86","endLine":26,"endColumn":37},{"ruleId":"71","severity":1,"message":"89","line":4,"column":10,"nodeType":"73","messageId":"74","endLine":4,"endColumn":16},{"ruleId":"71","severity":1,"message":"90","line":9,"column":8,"nodeType":"73","messageId":"74","endLine":9,"endColumn":19},{"ruleId":"71","severity":1,"message":"91","line":10,"column":8,"nodeType":"73","messageId":"74","endLine":10,"endColumn":16},{"ruleId":"71","severity":1,"message":"92","line":12,"column":22,"nodeType":"73","messageId":"74","endLine":12,"endColumn":37},{"ruleId":"71","severity":1,"message":"93","line":14,"column":17,"nodeType":"73","messageId":"74","endLine":14,"endColumn":20},"no-new-object",["94"],"@typescript-eslint/no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'useMediaQuery' is defined but never used.","'Avatar' is defined but never used.","'createTheme' is defined but never used.","'ThemeProvider' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'styled' is defined but never used.","'CardActions' is defined but never used.","'Collapse' is defined but never used.","'IconButtonProps' is defined but never used.","'red' is defined but never used.","no-object-constructor"]